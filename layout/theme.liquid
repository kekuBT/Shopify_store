<!doctype html>
  <html class="no-js" lang="{{ request.locale.iso_code }}">
    <head>
  
      {% render 'preload' %}
   
      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      <meta name="theme-color" content="">
      <link rel="canonical" href="{{ canonical_url }}">
      <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
  
      {%- if settings.favicon != blank -%}
        <link rel="icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
      {%- endif -%}
  
      {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
        <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
      {%- endunless -%}
  
      <title>
        {{ page_title }}
        {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
        {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
        {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
      </title>
  
      {% if page_description %}
        <meta name="description" content="{{ page_description | escape }}">
      {% endif %}
  
      {% render 'meta-tags' %}
      
      <!-- For speed optmization purpose -->
      {%- comment -%}
      {{ content_for_header }}
      {%- endcomment -%}
      {% include 'content_for_header' %}
        
      {%- liquid
        assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
        assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
        assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
      %}
  
      {% style %}
        {{ settings.type_body_font | font_face: font_display: 'swap' }}
        {{ body_font_bold | font_face: font_display: 'swap' }}
        {{ body_font_italic | font_face: font_display: 'swap' }}
        {{ body_font_bold_italic | font_face: font_display: 'swap' }}
        {{ settings.type_header_font | font_face: font_display: 'swap' }}
  
        :root {
          --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
          --font-body-style: {{ settings.type_body_font.style }};
          --font-body-weight: {{ settings.type_body_font.weight }};
  
          --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
          --font-heading-style: {{ settings.type_header_font.style }};
          --font-heading-weight: {{ settings.type_header_font.weight }};
  
          --font-body-scale: {{ settings.body_scale | divided_by: 100.0 }};
          --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};
  
          --color-text: {{ settings.colors_text.red }}, {{ settings.colors_text.green }}, {{ settings.colors_text.blue }};
          --color-shadow: {{ settings.colors_text.red }}, {{ settings.colors_text.green }}, {{ settings.colors_text.blue }};
          --color-background-1: {{ settings.colors_background_1.red }}, {{ settings.colors_background_1.green }}, {{ settings.colors_background_1.blue }};
          --color-background-2: {{ settings.colors_background_2.red }}, {{ settings.colors_background_2.green }}, {{ settings.colors_background_2.blue }};
          --color-base-solid-button-labels: {{ settings.colors_solid_button_labels.red }}, {{ settings.colors_solid_button_labels.green }}, {{ settings.colors_solid_button_labels.blue }};
          --color-base-outline-button-labels: {{ settings.colors_outline_button_labels.red }}, {{ settings.colors_outline_button_labels.green }}, {{ settings.colors_outline_button_labels.blue }};
          --color-accent-1: {{ settings.colors_accent_1.red }}, {{ settings.colors_accent_1.green }}, {{ settings.colors_accent_1.blue }};
          --color-accent-2: {{ settings.colors_accent_2.red }}, {{ settings.colors_accent_2.green }}, {{ settings.colors_accent_2.blue }};
          --payment-terms-background-color: {{ settings.colors_background_1 }};
          --color-input-border: {{ settings.color_input_border | default: "#000" }};
          --color-focus: {{ settings.color_focus | default: "#06aaa1" }};
  
          --page-width: {{ settings.page_width }}px;
          --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;
  
          --badge-sale-bg-color: {{ settings.sale_badge_color_bg | default: "#06aaa1" }};
          --badge-sale-color: {{ settings.sale_badge_color | default: "#fff" }};
          --badge-sold-out-bg-color: {{ settings.sold_out_badge_color_bg | default: "#2d2d2d" }};
          --badge-sold-out-color: {{ settings.sold_out_badge_color | default: "#fff" }};
  
          --colorHeader: {{ settings.color_header | default: "#fff" }};
          --colorHeaderText:{{ settings.color_header_text | default: "#111" }};
  
          --colorMenu: {{ settings.color_menu | default: "#fff" }};
          --colorMenuText: {{ settings.color_menu_text | default: "#111" }};
          --colorMenuSocial: {{ settings.color_menu_social | default: "#111" }}; 
  
          --colorFooter: {{ settings.color_footer | default: "#fff" }};
          --colorFooterBorder:{{ settings.color_footer_border | default: "#222" }};
          --colorFooterText:{{ settings.color_footer_text | default: "#111" }};
  
          --socialCircleWidth: {{ settings.social_circle_width }}px;
          --socialIconWidth: {{ settings.social_icon_width }}px;
          --socialIconColor: {{ settings.social_icon_color }};
          --socialCircleColor: {{ settings.social_circle_color }};         
        }
      {% endstyle %}
  
      {{ 'base.css' | asset_url | stylesheet_tag }}
  
      {%- unless settings.type_body_font.system? -%}
        <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
      {%- endunless -%}
      {%- unless settings.type_header_font.system? -%}
        <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
      {%- endunless -%}
  
      {%- if settings.predictive_search_enabled -%}
        <link rel="stylesheet" data-href="{{ 'component-predictive-search.css' | asset_url }}" media="print" onload="this.media='all'">
      {%- endif -%}
  
      <script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
      </script>
      {% render 'judgeme_core' %} 
    </head>
  
    <body class="template--{{template.name}} template--{{template.suffix}}">
  
      {% render 'quickview' %}
  
      <a class="skip-to-content-link button sr-only" href="#MainContent">
        {{ "accessibility.skip_to_text" | t }}
      </a>
    
      {% sections 'header-group' %}
      {% section 'cart-drawer-template' %}
      {%- if settings.enable_breadcrumbs -%}
        {% render 'breadcrumbs' %}
      {%- endif -%}
        
      <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
        {{ content_for_layout }}
      </main>
  
      {% render 'size-chart' %}
  
      {%- if settings.enable_back_to_top -%}
        {% render 'back-to-top-button' %}
      {%- endif -%}
  
      {% sections 'footer-group' %}
      
      <ul hidden>
        <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      </ul>
  
      <script>
        window.enable_color_swatch = {{ settings.enable_color_swatch }};
        window.shopUrl = '{{ shop.url }}';
        let shop_symbol = "{{ shop.money_format }}";
        console.log(shop_symbol);
        shop_symbol = shop_symbol.trim();
        window.shop_symbol = shop_symbol;
        window.routes = {
          cart_url: '{{ routes.cart_url }}',
          cart_add_url: '{{ routes.cart_add_url }}',
          cart_change_url: '{{ routes.cart_change_url }}',
          cart_update_url: '{{ routes.cart_update_url }}',
          predictive_search_url: '{{ routes.predictive_search_url }}',
          collection_url: '{{ routes.all_products_collection_url }}'
        };
  
        window.cartStrings = {
          empty:`{{ 'sections.cart.empty' | t }}`,
          discount_policy:`{{ 'products.product.discount_policy' | t }}`,
          error: `{{ 'sections.cart.cart_error' | t }}`,
          quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
          cartTermsConfirmation: `{{ 'sections.cart.terms_confirm' | t }}`
        }
  
        window.variantStrings = {
          addToCart: `{{ 'products.product.add_to_cart' | t }}`,
          quickview: '{{ 'products.product.quickview' | t }}',
          soldOut: `{{ 'products.product.sold_out' | t }}`,
          quickview: '{{ 'products.product.quickview' | t }}',
          unavailable: `{{ 'products.product.unavailable' | t }}`,
        }
  
        window.cartItems = {
          remove: `{{ 'sections.cart.remove' | t }}`,
          cart_count: {
            one: `{{ 'sections.header.cart_count.one' | t }}`,
            other: `{{ 'sections.header.cart_count.other' | t }}`
          }
        }
  
        window.accessibilityStrings = {
          imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
          shareSuccess: `{{ 'general.share.success_message' | t }}`,
          pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
          playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        }
        
        window.settings = {
          cartType: `{{ settings.cart_type}}`
        }
      </script>
  
      <script src="{{ 'vendor-scripts.js' | asset_url }}" ></script>
      <script src="{{ 'global.js' | asset_url }}"></script>
      <script src="{{ 'lazysizes.js' | asset_url }}" async="async"></script>
      <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
  
      {{ 'theme.js' | asset_url | script_tag }}
      {{ 'store.js' | asset_url | script_tag }}
  
      {%- if request.page_type == "product" -%}
        {%- assign first_3d_model = product.media | where: "media_type", "model" | first -%}
        {%- if first_3d_model -%}
          <script data-src="{{ 'product-model.js' | asset_url }}"></script>
        {%- endif -%}
      {%- endif -%}
  
      {%- if settings.predictive_search_enabled -%}
        <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
      {%- endif -%}
  
      <script>
        function animateElements() {
          var animatedElements = document.querySelectorAll('.data-aos');
  
          function handleIntersection(entries) {
            entries.map((entry) => {
              if (entry.isIntersecting) {
                entry.target.classList.add('aos-animate');
                observer.unobserve(entry.target);
              }
            });
          }
  
          var observer = new IntersectionObserver(handleIntersection);
  
          animatedElements.forEach(elem => observer.observe(elem));
        }
        animateElements();
  
        // Prevents multiple search page re-rendering
        let popstate = false;
        window.addEventListener('popstate', function(event) {
          popstate = false;
        });
      </script>
  
      {% if request.design_mode == false %}
        {{'optimize.js' | asset_url | script_tag }}
      {% else %}
        {{'optimize-editor.js' | asset_url | script_tag }}
      {% endif %}
      
    </body>
  </html>